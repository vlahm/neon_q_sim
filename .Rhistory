pal <- c('black', rev(viridis::viridis(5, begin = 0.1, end = 1)))
if(! file.exists('in/neon_site_info.csv')){
download.file('https://www.hydroshare.org/resource/03c52d47d66e40f4854da8397c7d9668/data/contents/neon_site_info.csv',
destfile = 'in/neon_site_info.csv')
}
neon_sites <- read_csv('in/neon_site_info.csv') %>%
filter(! SiteType == 'Lake') %>%
pull(SiteID)
if(! length(list.files('in/neon_continuous_Q/'))){
get_neon_inst_discharge(neon_sites)
}
if(! length(list.files('in/neon_field_Q/'))){
get_neon_field_discharge(neon_sites)
}
#initialize results data.frame
plotd <- matrix(
NA_real_, nrow = 27, ncol = 7,
dimnames = list(
NULL,
c('site', 'nse_neon', 'kge_neon', 'nse_lm', 'nse_lm_scaled', 'kge_lm', 'kge_lm_scaled')
# c('site', 'nse_lm', 'nse_lm_scaled', 'nse_gen', 'nse_spec', 'nse_pgdl',
#   'kge_lm', 'kge_lm_scaled', 'kge_gen', 'kge_spec', 'kge_pgdl')
)
) %>% as_tibble()
plotd$site <- neon_sites
## 2. compile lm results ####
results_specq <- read_csv('out/lm_out_specQ/results_specificq.csv')
results_q <- read_csv('out/lm_out/results.csv')
for(s in plotd$site){
i <- which(plotd[, 'site'] == s)
plotd$nse_lm_scaled[i] <- filter(results_specq, site_code == !!s) %>% pull(nse)
plotd$nse_lm[i] <- filter(results_q, site_code == !!s) %>% pull(nse)
plotd$kge_lm_scaled[i] <- filter(results_specq, site_code == !!s) %>% pull(kge)
plotd$kge_lm[i] <- filter(results_q, site_code == !!s) %>% pull(kge)
}
## 3. compile LSTM results ####
gen_res <- retrieve_test_results(generalist_runids)
spec_res <- retrieve_test_results(specialist_runids)
pgdl_res <- retrieve_test_results(pgdl_runids)
# c('site', 'nse_lm', 'nse_lm_scaled', 'nse_gen', 'nse_spec', 'nse_pgdl',
#   'kge_lm', 'kge_lm_scaled', 'kge_gen', 'kge_spec', 'kge_pgdl')
plotd <- left_join(plotd, reduce_results(gen_res$nse, 'nse_gen', max, na.rm = TRUE))
plotd <- left_join(plotd, reduce_results(gen_res$kge, 'kge_gen', max, na.rm = TRUE))
plotd <- left_join(plotd, reduce_results(spec_res$nse, 'nse_spec', mean, na.rm = TRUE))
plotd <- left_join(plotd, reduce_results(spec_res$kge, 'kge_spec', mean, na.rm = TRUE))
plotd <- left_join(plotd, reduce_results(pgdl_res$nse, 'nse_pgdl', mean, na.rm = TRUE))
plotd <- left_join(plotd, reduce_results(pgdl_res$kge, 'kge_pgdl', mean, na.rm = TRUE))
## 4. compile NEON results ####
for(s in plotd$site){
i <- which(plotd[, 'site'] == s)
neon_q_manual <- read_csv(glue('in/neon_field_Q/{s}.csv')) %>%
filter(! is.na(discharge)) %>%
mutate(discharge = ifelse(discharge < 0, 0, discharge)) %>%
select(-site_code) %>%
group_by(datetime) %>%
summarize(discharge = mean(discharge, na.rm = TRUE)) %>%
ungroup()
neon_q_auto <- read_csv(glue('in/neon_continuous_Q/{s}.csv')) %>%
filter(! is.na(discharge)) %>%
select(-site_code)
if(s == 'TOMB'){
cmp <- approxjoin_datetime(
x = mutate(neon_q_manual, site_code = s, var = 'discharge') %>%
rename(val = discharge),
y = mutate(neon_q_auto, site_code = s, var = 'discharge') %>%
rename(val = discharge),
rollmax = '12:00:00'
) %>%
as_tibble() %>%
select(datetime, discharge.man = val_x, discharge.aut = val_y)
} else {
cmp <- left_join(neon_q_manual, neon_q_auto, by = 'datetime', suffix = c('.man', '.aut'))
}
plotd[i, 'nse_neon'] <- hydroGOF::NSE(cmp$discharge.aut, cmp$discharge.man)
plotd[i, 'kge_neon'] <- hydroGOF::KGE(cmp$discharge.aut, cmp$discharge.man)
}
plotd
plotd %>%
mutate(across(starts_with('nse') & -nse_neon), max, na.rm = TRUE)
plotd %>%
mutate(across(starts_with('nse') & -nse_neon, max, na.rm = TRUE))
?rowwise
plotd %>%
rowwise() %>%
mutate(max_nse = sum(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
summarize(mean_nse = mean(max_nse, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(mean_nse = mean(max_nse, na.rm = TRUE))
summarize(mean_nse = median(max_nse, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(mean_nse = median(max_nse, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(mean_nse = mean(max_nse, na.rm = TRUE),
mean_kge = mean(max_kge, na.rm = TRUE))
plotd %>%
group_by() %>%
summarize(mean_nse = mean(nse_neon, na.rm = TRUE),
mean_kge = mean(kge_neon, na.rm = TRUE))
plotd %>%
summarize(across(starts_with(c('nse', 'kge')),
list(median = ~median(., na.rm = T),
mean = ~mean(., na.rm = T),
min = ~min(., na.rm = T),
max = ~max(., na.rm = T),
n = ~sum(! is.na(.))),
.names = '{.col}_{.fn}')) %>%
pivot_longer(everything(), names_to = c('score', 'model'), names_pattern = '^(nse|kge)_(.+)') %>%
tidyr::extract('model', c('model', 'stat'), '(.*?)_([^_]+)$') %>%
pivot_wider(names_from = c('stat', 'score'), values_from = 'value') %>%
mutate(across(where(is.numeric), ~round(., 3))) %>%
select(-n_nse) %>%
rename(n_sites = n_kge)
plotd %>%
summarize(across(starts_with(c('nse', 'kge')),
list(median = ~median(., na.rm = T),
mean = ~mean(., na.rm = T),
min = ~min(., na.rm = T),
max = ~max(., na.rm = T),
n = ~sum(! is.na(.))),
.names = '{.col}_{.fn}')) %>%
pivot_longer(everything(), names_to = c('score', 'model'), names_pattern = '^(nse|kge)_(.+)') %>%
tidyr::extract('model', c('model', 'stat'), '(.*?)_([^_]+)$') %>%
pivot_wider(names_from = c('stat', 'score'), values_from = 'value') %>%
mutate(across(where(is.numeric), ~round(., 3))) %>%
select(-n_nse) %>%
rename(n_sites = n_kge) %>%
write_csv('out/score_table.csv')
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(mean_nse = mean(max_nse, na.rm = TRUE),
mean_kge = mean(max_kge, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(mean_nse = median(max_nse, na.rm = TRUE),
mean_kge = mean(max_kge, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
pull(max_nse) %>%
density()
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
pull(max_nse) %>%
density() %>%
plot()
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
group_by() %>%
summarize(median_nse = median(max_nse, na.rm = TRUE),
median_kge = median(max_kge, na.rm = TRUE))
plotd %>%
group_by() %>%
summarize(median_nse = median(nse_neon, na.rm = TRUE),
median_kge = median(kge_neon, na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE))
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE))
filter(max_nse > nse_neon)
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
filter(max_nse > nse_neon)
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
select(site, nse_neon, kge_neon, max_nse, max_kge) %>%
filter(max_nse > nse_neon)
plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
select(site, nse_neon, kge_neon, max_nse, max_kge) %>%
filter(max_kge > kge_neon)
5474/30.437
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE)) %>%
select(site, nse_neon, kge_neon, max_nse, max_kge)
maxd
plot(density(maxd$max_nse))
plot(density(maxd$max_kge))
group_by(maxd) %>%
summarize(median_nse = median(max_nse, na.rm = TRUE),
median_kge = median(max_kge, na.rm = TRUE))
group_by(maxd) %>%
summarize(median_nse = median(nse_neon, na.rm = TRUE),
median_kge = median(kge_neon, na.rm = TRUE))
filter(maxd, max_kge > kge_neon)
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE),
bestmod_nse = which.max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
bestmod_kge = which.max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE))
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE),
bestmod_nse = which.max(c_across(starts_with('nse') & -nse_neon)),
bestmod_kge = which.max(c_across(starts_with('kge') & -kge_neon))
select(site, ends_with('neon'), starts_with(c('max', 'bestmod')))
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE),
bestmod_nse = which.max(c_across(starts_with('nse') & -nse_neon)),
bestmod_kge = which.max(c_across(starts_with('kge') & -kge_neon)))
select(site, ends_with('neon'), starts_with(c('max', 'bestmod')))
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE),
bestmod_nse = which.max(c_across(starts_with('nse') & -nse_neon)),
bestmod_kge = which.max(c_across(starts_with('kge') & -kge_neon))) %>%
select(site, ends_with('neon'), starts_with(c('max', 'bestmod')))
maxd
plotd
grep('^nse_', colnames(plotd), value = TRUE)
grep('^nse_', colnames(plotd), value = TRUE)[-1]
match(maxd$bestmod_nse, grep('^nse_', colnames(plotd), value = TRUE)[-1])
grep('^nse_', colnames(plotd), value = TRUE)[-1])[maxd$bestmod_nse]
maxd$bestmod_nse
grep('^nse_', colnames(plotd), value = TRUE)[-1])
grep('^nse_', colnames(plotd), value = TRUE)[-1][maxd$bestmod_nse]
maxd$bestmod_nse <- grep('^nse_', colnames(plotd), value = TRUE)[-1][maxd$bestmod_nse]
maxd$bestmod_kge <- grep('^kge_', colnames(plotd), value = TRUE)[-1][maxd$bestmod_kge]
maxd
View(maxd)
substr(maxd$bestmod_nse, 4, nchar(maxd$bestmod_nse))
substr(maxd$bestmod_nse, 5, nchar(maxd$bestmod_nse))
maxd <- plotd %>%
rowwise() %>%
mutate(max_nse = max(c_across(starts_with('nse') & -nse_neon), na.rm = TRUE),
max_kge = max(c_across(starts_with('kge') & -kge_neon), na.rm = TRUE),
bestmod_nse = which.max(c_across(starts_with('nse') & -nse_neon)),
bestmod_kge = which.max(c_across(starts_with('kge') & -kge_neon))) %>%
select(site, ends_with('neon'), starts_with(c('max', 'bestmod')))
maxd$bestmod_nse <- grep('^nse_', colnames(plotd), value = TRUE)[-1][maxd$bestmod_nse]
maxd$bestmod_nse <- substr(maxd$bestmod_nse, 5, nchar(maxd$bestmod_nse))
maxd$bestmod_kge <- grep('^kge_', colnames(plotd), value = TRUE)[-1][maxd$bestmod_kge]
maxd$bestmod_kge <- substr(maxd$bestmod_kge, 5, nchar(maxd$bestmod_kge))
maxd
print(maxd)
print(maxd, n = 50)
plot(density(maxd$max_nse))
plot(density(maxd$max_kge))
group_by(maxd) %>%
summarize(median_nse = median(max_nse, na.rm = TRUE),
median_kge = median(max_kge, na.rm = TRUE))
group_by(maxd) %>%
summarize(median_nse = median(nse_neon, na.rm = TRUE),
median_kge = median(kge_neon, na.rm = TRUE))
filter(maxd, max_kge > kge_neon)
filter(maxd, max_nse > nse_neon)
filter(maxd, kge_neon < 0.7)
filter(maxd, nse_neon < 0.7)
plotd_kge <- select(plotd, -contains('nse'))
plotd_kge$rowmax <- apply(select(plotd_kge, -site), 1, max, na.rm = TRUE)
plotd_kge <- arrange(plotd_kge, desc(rowmax))
plotd_m <- as.matrix(select(plotd_kge, -site, -rowmax))
plotd_m[! is.na(plotd_m) & plotd_m < -0.05] <- -0.05
plotd_m <- t(plotd_m)
rownames(plotd_m) <- c('Published', 'Linreg', 'Linreg scaled', 'LSTM generalist', 'LSTM specialist', 'LSTM process-guided')
plot(1:230, rep(0.5, 230), ylim = c(0, 1), ann = FALSE, axes = FALSE, col = 'transparent')
gray_bar_seq <- seq(0.2, 238, 17)
for(i in 1:14){
ix <- gray_bar_seq[i] + i / 11
polygon(c(ix, ix + 8.3, ix + 8.3, ix), c(-0.36, -0.36, 1.04, 1.04), col = 'gray85', border = FALSE, xpd = NA)
}
par(new = TRUE)
barplot(plotd_m, beside = TRUE, ylim = c(0, 1), names.arg = plotd_kge$site,
col = pal, las = 2, ylab = 'Kling-Gupta Efficiency',
legend.text = TRUE, border = 'transparent',
args.legend = list(x = 163, y=1.2, bty = 'n', cex = 0.9, border = FALSE,
xpd = NA, ncol = 3))
plotd_kge <- select(plotd, -contains('nse'))
plotd_kge
apply(select(plotd_kge, -site), 1, max, na.rm = TRUE)
plotd_kge <- select(plotd, -contains('nse'))
plotd_kge$rowmax <- apply(select(plotd_kge, -site), 1, max, na.rm = TRUE)
plotd_kge <- arrange(plotd_kge, desc(kge_neon))
plotd_m <- as.matrix(select(plotd_kge, -site, -rowmax))
plotd_m[! is.na(plotd_m) & plotd_m < -0.05] <- -0.05
plotd_m <- t(plotd_m)
rownames(plotd_m) <- c('Published', 'Linreg', 'Linreg scaled', 'LSTM generalist', 'LSTM specialist', 'LSTM process-guided')
plot(1:230, rep(0.5, 230), ylim = c(0, 1), ann = FALSE, axes = FALSE, col = 'transparent')
gray_bar_seq <- seq(0.2, 238, 17)
for(i in 1:14){
ix <- gray_bar_seq[i] + i / 11
polygon(c(ix, ix + 8.3, ix + 8.3, ix), c(-0.36, -0.36, 1.04, 1.04), col = 'gray85', border = FALSE, xpd = NA)
}
par(new = TRUE)
barplot(plotd_m, beside = TRUE, ylim = c(0, 1), names.arg = plotd_kge$site,
col = pal, las = 2, ylab = 'Kling-Gupta Efficiency',
legend.text = TRUE, border = 'transparent',
args.legend = list(x = 163, y=1.2, bty = 'n', cex = 0.9, border = FALSE,
xpd = NA, ncol = 3))
png(width = 8, height = 4, units = 'in', type = 'cairo', res = 300,
filename = 'figs/fig2_kge_withneon.png')
plot(1:230, rep(0.5, 230), ylim = c(0, 1), ann = FALSE, axes = FALSE, col = 'transparent')
gray_bar_seq <- seq(0.2, 238, 17)
for(i in 1:14){
ix <- gray_bar_seq[i] + i / 11
polygon(c(ix, ix + 8.3, ix + 8.3, ix), c(-0.36, -0.36, 1.04, 1.04), col = 'gray85', border = FALSE, xpd = NA)
}
par(new = TRUE)
barplot(plotd_m, beside = TRUE, ylim = c(0, 1), names.arg = plotd_kge$site,
col = pal, las = 2, ylab = 'Kling-Gupta Efficiency',
legend.text = TRUE, border = 'transparent',
args.legend = list(x = 163, y=1.2, bty = 'n', cex = 0.9, border = FALSE,
xpd = NA, ncol = 3))
dev.off()
filter(maxd, max_kge > kge_neon)
maxd
plotd
filter(maxd, max_kge > kge_neon)
plotd
filter(maxd, kge_neon < 0.7)
filter(maxd,
kge_neon < 0.7,
max_kge > 0.69)
maxd %>%
filter(kge_neon < 0.7,
max_kge > 0.69) %>%  #*
pull(max_kge) %>%
mean()
maxd
print(maxd, n = 50)
pal
pal <- c('black', rev(viridis::viridis(5, begin = 0.1, end = 0.95)))
pal
pal <- c('black', rev(viridis::viridis(5, begin = 0.1, end = 0.9)))
pal
pal <- c('black', rev(viridis::viridis(5, begin = 0.15, end = 1)))
pal
pal <- c('black', rev(viridis::viridis(5, begin = 0.15, end = 1)))
plotd_kge <- select(plotd, -contains('nse'))
plotd_kge$rowmax <- apply(select(plotd_kge, -site), 1, max, na.rm = TRUE)
plotd_kge <- arrange(plotd_kge, desc(kge_neon))
plotd_m <- as.matrix(select(plotd_kge, -site, -rowmax))
plotd_m[! is.na(plotd_m) & plotd_m < -0.05] <- -0.05
plotd_m <- t(plotd_m)
rownames(plotd_m) <- c('Published', 'Linreg', 'Linreg scaled', 'LSTM generalist', 'LSTM specialist', 'LSTM process-guided')
png(width = 8, height = 4, units = 'in', type = 'cairo', res = 300,
filename = 'figs/fig2_kge_withneon.png')
plot(1:230, rep(0.5, 230), ylim = c(0, 1), ann = FALSE, axes = FALSE, col = 'transparent')
gray_bar_seq <- seq(0.2, 238, 17)
for(i in 1:14){
ix <- gray_bar_seq[i] + i / 11
polygon(c(ix, ix + 8.3, ix + 8.3, ix), c(-0.36, -0.36, 1.04, 1.04), col = 'gray85', border = FALSE, xpd = NA)
}
par(new = TRUE)
barplot(plotd_m, beside = TRUE, ylim = c(0, 1), names.arg = plotd_kge$site,
col = pal, las = 2, ylab = 'Kling-Gupta Efficiency',
legend.text = TRUE, border = 'transparent',
args.legend = list(x = 163, y=1.2, bty = 'n', cex = 0.9, border = FALSE,
xpd = NA, ncol = 3))
dev.off()
pal <- c('black', rev(viridis::viridis(5, begin = 0.2, end = 1)))
pal
plotd_kge <- select(plotd, -contains('nse'))
plotd_kge$rowmax <- apply(select(plotd_kge, -site), 1, max, na.rm = TRUE)
plotd_kge <- arrange(plotd_kge, desc(kge_neon))
plotd_m <- as.matrix(select(plotd_kge, -site, -rowmax))
plotd_m[! is.na(plotd_m) & plotd_m < -0.05] <- -0.05
plotd_m <- t(plotd_m)
rownames(plotd_m) <- c('Published', 'Linreg', 'Linreg scaled', 'LSTM generalist', 'LSTM specialist', 'LSTM process-guided')
png(width = 8, height = 4, units = 'in', type = 'cairo', res = 300,
filename = 'figs/fig2_kge_withneon.png')
plot(1:230, rep(0.5, 230), ylim = c(0, 1), ann = FALSE, axes = FALSE, col = 'transparent')
gray_bar_seq <- seq(0.2, 238, 17)
for(i in 1:14){
ix <- gray_bar_seq[i] + i / 11
polygon(c(ix, ix + 8.3, ix + 8.3, ix), c(-0.36, -0.36, 1.04, 1.04), col = 'gray85', border = FALSE, xpd = NA)
}
par(new = TRUE)
barplot(plotd_m, beside = TRUE, ylim = c(0, 1), names.arg = plotd_kge$site,
col = pal, las = 2, ylab = 'Kling-Gupta Efficiency',
legend.text = TRUE, border = 'transparent',
args.legend = list(x = 163, y=1.2, bty = 'n', cex = 0.9, border = FALSE,
xpd = NA, ncol = 3))
dev.off()
filter(maxd, max_kge > kge_neon)
maxd
print(maxd, n = 50)
# Mike Vlah
# vlahm13@gmail.com
# last edit: 2023-03-08
library(tidyverse)
library(neonUtilities)
library(viridis)
library(lubridate)
options(readr.show_progress = FALSE,
readr.show_col_types = FALSE,
timeout = 3000)
source('src/00_helpers.R')
## 1. load data ####
# NEON discharge data (field measurements and continuous)
if(! length(list.files('in/neon_continuous_Q/'))){
get_neon_inst_discharge(neon_sites)
}
if(! file.exists('in/neon_site_info.csv')){
download.file('https://www.hydroshare.org/resource/03c52d47d66e40f4854da8397c7d9668/data/contents/neon_site_info.csv',
destfile = 'in/neon_site_info.csv')
}
neon_sites <- read_csv('in/neon_site_info.csv') %>%
filter(! SiteType == 'Lake') %>%
pull(SiteID)
plotd <- list()
for(s in neon_sites){
plotd[[s]] <- read_csv(paste0('in/neon_continuous_Q/', s, '.csv'))
}
library(reticulate)
reticulate::use_condaenv('nh2')
xr <- reticulate::import("xarray")
pd <- reticulate::import("pandas")
np <- reticulate::import("numpy")
nh_dir <- 'out/lstm_runs'
nh_dir
confdir <- file.path(getwd(), 'in/lstm_configs')
confdir
rundir <- file.path(getwd(), 'out/lstm_runs')
rundir
source_python('src/lstm_dungeon/test.py')
?py_run_file
?py_run_string
?source_python
?py_eval
library(readr)
write_lines(getwd(), 'src/lstm_dungeon/wd.txt')
write_lines(getwd(), 'src/lstm_dungeon/wdir.txt')
write_lines(confdir, 'src/lstm_dungeon/confdir.txt')
write_lines(rundir, 'src/lstm_dungeon/rundir.txt')
write_lines(getwd(), 'src/lstm_dungeon/dirlocs.txt')
write_lines(confdir, 'src/lstm_dungeon/dirlocs.txt', append = TRUE)
write_lines(rundir, 'src/lstm_dungeon/dirlocs.txt', append = TRUE)
Sys.setenv(zz = 'a')
Sys.setenv(ZZ = 'a')
py_run_file('src/lstm_dungeon/test.py')
envz <- new.env()
envz$x <- 9
envzz <- as.list(envz)
envzz
py_run_file('src/lstm_dungeon/test.py')
r2pyenv <- new.env()
r2pyenv$wdir <- getwd()
r2pyenv$confdir <- confdir
r2pyenv$rundir <- rundir
r2pyenv <- as.list(r2pyenv)
r2pyenv
py_run_file('src/lstm_dungeon/test.py')
reticulate::repl_python()
r2pyenv_template$strategy <- 'generalist'
r2pyenv_template <- new.env()
r2pyenv_template$wdir <- getwd()
r2pyenv_template$confdir <- confdir
r2pyenv_template$rundir <- rundir
r2pyenv_template$strategy <- 'generalist'
r2pyenv <- as.list(r2pyenv_template)
reticulate::repl_python()
r2pyenv_template$runset <- 'runs_1468-1507'
r2pyenv <- as.list(r2pyenv_template)
r2pyenv_template$strategy <- 'generalist'
r2pyenv_template$runset <- 'runs_1468-1507'
r2pyenv <- as.list(r2pyenv_template)
reticulate::repl_python()
